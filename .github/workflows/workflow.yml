name: Build Spring Boot with Gradle and SonarQube

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DATABASE }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Cache SonarQube Packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle Packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Permissão Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Criar pasta para o arquivo de configuração
        run: mkdir -p  ${{ secrets.FOLDER_PATH }}

      - name: Copiar arquivo Properties
        run: |
          cp  ${{ secrets.FILE_PATH }}

      - name: Construir Projeto
        run: ./gradlew build --no-daemon --info

      - name: Executar Testes e Gerar Relatório JaCoCo
        run: ./gradlew clean test jacocoTestReport --no-daemon --info

      - name: Build e Análise do SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --info

      - name: Usuário
        run: echo "BUILD EXECUTADO POR:" ${{ github.actor }}
